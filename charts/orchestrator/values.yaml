sonataFlowOperator:
  enabled: true # whether the operator should be deployed by the chart
  subscription:
    namespace: openshift-operators # namespace where the operator should be deployed
    channel: alpha # channel of an operator package to subscribe to
    installPlanApproval: Automatic # whether the update should be installed automatically
    pkgName: sonataflow-operator # name of the operator package
    sourceImage: quay.io/masayag/kogito-serverless-operator-catalog:v2.0.0-snapshot # catalog image of the development build. Unset it for the release build.
    sourceNamespace: openshift-marketplace # namespace of the catalog source
    source: sonataflow-operator # name of the catalog source for the operator

serverlessOperator:
  enabled: true # whether the operator should be deployed by the chart
  subscription:
    namespace: openshift-serverless # namespace where the operator should be deployed
    channel: stable # channel of an operator package to subscribe to
    installPlanApproval: Automatic # whether the update should be installed automatically
    pkgName: serverless-operator # name of the operator package
    sourceNamespace: openshift-marketplace # namespace of the catalog source

postgres:
  serviceName: "sonataflow-psql-postgresql" # The name of the Postgres DB service to be used by dataindex and job service. Cannot be empty.
  serviceNamespace: "sonataflow-infra" # The namespace of the Postgres DB service to be used by dataindex and job service.
  authSecret:
    name: "sonataflow-psql-postgresql" # name of existing secret to use for PostgreSQL credentials.
    userKey: postgres-username # name of key in existing secret to use for PostgreSQL credentials.
    passwordKey: postgres-password # name of key in existing secret to use for PostgreSQL credentials.
  database: sonataflow # existing database instance used by data index and job service

# override Janus image with one with the orchestrator plugin
backstage:
  global:
    dynamic:
      includes:
        - dynamic-plugins.default.yaml
      plugins:
        - disabled: false
          integrity: >-
            sha512-4BsB2jdgzBNYpE0IcFYmlEgfu6HJnD9uX8ZpzzYHTkMs8AU3aWWb3PZG0nu/y5s8m0kr4TBbS++gePwRdqDrgw==
          package: "@janus-idp/backstage-plugin-orchestrator-backend-dynamic@0.0.1"
          pluginConfig:
            orchestrator:
              dataIndexService:
                url: http://sonataflow-platform-data-index-service.sonataflow-infra
              editor:
                path: "https://sandbox.kie.org/swf-chrome-extension/0.32.0"
        - disabled: false
          integrity: >-
            sha512-QYwZ5MTckS1gQQIQUBoOboiGefCtkcG+S8IFPiJ+6rPEtjzmUpVL5TmG1hXCUHWBMJP/+tKxlpNQib2SMInRnA==
          package: "@janus-idp/backstage-plugin-orchestrator@1.0.0"
          pluginConfig:
            dynamicPlugins:
              frontend:
                janus-idp.backstage-plugin-orchestrator:
                  appIcons:
                    - importName: OrchestratorIcon
                      module: OrchestratorPlugin
                      name: orchestratorIcon
                  dynamicRoutes:
                    - importName: OrchestratorPage
                      menuItem:
                        icon: orchestratorIcon
                        text: Orchestrator
                      module: OrchestratorPlugin
                      path: /orchestrator
  upstream:
    backstage:
      image:
        tag: pr-885
      appConfig:
        integrations:
          github:
            - host: github.com
              token: "INSERT VALID TOKEN HERE"
        auth:
          environment: development
          providers:
            github:
              development:
                clientId: "INSERT VALID CLIENT ID HERE"
                clientSecret: "INSERT VALID CLIENT SECRET HERE"
        catalog:
          rules:
            - allow:
                [
                  Component,
                  System,
                  Group,
                  Resource,
                  Location,
                  Template,
                  API,
                  User,
                  Domain,
                ]
          locations:
            - type: url
              target: https://github.com/janus-idp/backstage-plugins/blob/main/plugins/notifications-backend/users.yaml
            - type: url
              target: https://github.com/parodos-dev/workflow-software-templates/blob/main/entities/workflow-resources.yaml
            - type: url
              target: https://github.com/parodos-dev/workflow-software-templates/blob/main/template/template.yaml
            - type: url
              target: https://github.com/janus-idp/software-templates/blob/main/showcase-templates.yaml
        backend:
          csp:
            frame-src:
              - "https://sandbox.kie.org"
          database:
            client: pg
            connection:
              password: ${POSTGRESQL_ADMIN_PASSWORD}
              user: postgres
              host: orchestrator-postgresql-hl.orchestrator.svc.cluster.local
              port: 5432

orchestrator:
  namespace: sonataflow-infra # namespace where the data index, job service and workflows are deployed
  sonataPlatform:
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    dataIndex:
      image: "quay.io/kiegroup/kogito-data-index-postgresql-nightly:latest" # To be removed when stable version is released
    jobService:
      image: "quay.io/kiegroup/kogito-jobs-service-postgresql-nightly:latest" # To be removed when stable version is released
  sonataflows: # workflows to get deployed - this option will be removed once the plugin will interact directly with the data-index
    - name: greeting
      image: quay.io/orchestrator/serverless-workflow-greeting:latest
