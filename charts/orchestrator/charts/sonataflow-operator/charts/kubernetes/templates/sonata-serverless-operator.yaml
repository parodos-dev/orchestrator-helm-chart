---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.global.orchestrator.namespace }} 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }} 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sonataflow-operator-leader-election-role
  namespace: {{ .Values.global.orchestrator.namespace }} 
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sonataflow-operator-builder-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - pods/exec
  - services
  - services/finalizers
  - namespaces
  - serviceaccounts
  - persistentvolumeclaims
  - secrets
  - events
  - deployments
  - nodes
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - configmaps
  - pods
  - pods/exec
  - services
  - services/finalizers
  - namespaces
  - serviceaccounts
  - persistentvolumeclaims
  - secrets
  - events
  - deployments
  - nodes
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sonataflow-operator-leases
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: sonataflow-operator-manager-role
rules:
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowbuilds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowbuilds/finalizers
  verbs:
  - update
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowbuilds/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowplatforms
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowplatforms/finalizers
  verbs:
  - update
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowplatforms/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflows
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowclusterplatforms
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowclusterplatforms/finalizers
  verbs:
  - update
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflowclusterplatforms/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflows
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch

- apiGroups:
  - sonataflow.org
  resources:
  - sonataflows/finalizers
  verbs:
  - update
- apiGroups:
  - sonataflow.org
  resources:
  - sonataflows/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sonataflow-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sonataflow-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sonataflow-operator-service-discovery-role
rules:
- apiGroups:
  - apps
  resources:
  - statefulset
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingress
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - service
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - eventing.knative.dev
  resources:
  - broker
  - brokers
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sonataflow-operator-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sonataflow-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sonataflow-operator-builder-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonataflow-operator-builder-manager-role
subjects:
- kind: ServiceAccount
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sonataflow-operator-leases-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonataflow-operator-leases
subjects:
- kind: ServiceAccount
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sonataflow-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonataflow-operator-manager-role
subjects:
- kind: ServiceAccount
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sonataflow-operator-openshift-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonataflow-operator-openshift-manager-role
subjects:
- kind: ServiceAccount
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sonataflow-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonataflow-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sonataflow-operator-service-discovery-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonataflow-operator-service-discovery-role
subjects:
- kind: ServiceAccount
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: v1
data:
  DEFAULT_BUILDER_RESOURCE_NAME: Dockerfile
  DEFAULT_WORKFLOW_EXTENSION: .sw.json
  Dockerfile: "FROM quay.io/kiegroup/kogito-swf-builder:1.44 AS builder\n\n# variables
    that can be overridden by the builder\n# To add a Quarkus extension to your application\nARG
    QUARKUS_EXTENSIONS\n# Args to pass to the Quarkus CLI add extension command\nARG
    QUARKUS_ADD_EXTENSION_ARGS\n\n# Copy from build context to skeleton resources
    project\nCOPY --chmod=644 * ./resources/\n\nRUN /home/kogito/launch/build-app.sh
    ./resources\n  \n#=============================\n# Runtime Run\n#=============================\nFROM
    registry.access.redhat.com/ubi8/openjdk-11:latest\n\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\n
    \ \n# We make four distinct layers so if there are application changes the library
    layers can be re-used\nCOPY --from=builder --chown=185 /home/kogito/serverless-workflow-project/target/quarkus-app/lib/
    /deployments/lib/\nCOPY --from=builder --chown=185 /home/kogito/serverless-workflow-project/target/quarkus-app/*.jar
    /deployments/\nCOPY --from=builder --chown=185 /home/kogito/serverless-workflow-project/target/quarkus-app/app/
    /deployments/app/\nCOPY --from=builder --chown=185 /home/kogito/serverless-workflow-project/target/quarkus-app/quarkus/
    /deployments/quarkus/\n\nEXPOSE 8080\nUSER 185\nENV AB_JOLOKIA_OFF=\"\"\nENV JAVA_OPTS=\"-Dquarkus.http.host=0.0.0.0
    -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\nENV JAVA_APP_JAR=\"/deployments/quarkus-run.jar\"\n"
kind: ConfigMap
metadata:
  name: sonataflow-operator-builder-config
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 1be5e57d.kiegroup.org
kind: ConfigMap
metadata:
  name: sonataflow-operator-manager-config
  namespace: {{ .Values.global.orchestrator.namespace }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: sonataflow-operator-controller-manager-metrics-service
  namespace: {{ .Values.global.orchestrator.namespace }}
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: sonataflow-operator-controller-manager
  namespace: {{ .Values.global.orchestrator.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --v=0
        command:
        - /usr/local/bin/manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.operator.image }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: sonataflow-operator-controller-manager
      terminationGracePeriodSeconds: 10
