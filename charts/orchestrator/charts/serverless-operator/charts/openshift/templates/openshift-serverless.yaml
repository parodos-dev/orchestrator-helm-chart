{{- $unmanagedNamespaceExists := include "unmanaged-resource-exists" (list "v1" "Namespace" "" .Values.subscription.namespace .Release.Name) }}
{{- if and (eq $unmanagedNamespaceExists "false") .Values.enabled }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.subscription.namespace }}
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: serverless-operator-group
  namespace: {{ .Values.subscription.namespace }}
spec: {}
---
{{- $unmanagedSubscriptionExists := include "unmanaged-resource-exists" (list "operators.coreos.com/v1alpha1" "Subscription" .Values.subscription.namespace "serverless-operator" .Release.Name) }}
{{- if eq $unmanagedSubscriptionExists "false" }}
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: serverless-operator
  namespace: {{ .Values.subscription.namespace }}
spec:
  channel: {{ .Values.subscription.channel }}
  installPlanApproval: Automatic
  name: serverless-operator
  source: redhat-operators
  sourceNamespace: {{ .Values.subscription.sourceNamespace | default (include "get-default-catalogsource-namespace" .) | quote }}
---
{{- end }}
{{- end }}

{{- $unmanagedNamespaceExists := include "unmanaged-resource-exists" (list "v1" "Namespace" "" "knative-serving" .Release.Name) }}
{{- if eq $unmanagedNamespaceExists "false" }}
apiVersion: v1
kind: Namespace
metadata:
  name: knative-serving
---
{{- $unmanagedNamespaceExists := include "unmanaged-resource-exists" (list "v1" "Namespace" "" "knative-eventing" .Release.Name) }}
{{- if eq $unmanagedNamespaceExists "false" }}
apiVersion: v1
kind: Namespace
metadata:
  name: knative-eventing
---
{{- end }}
{{- $unmanagedKnativeEventingExists := include "unmanaged-resource-exists" (list "operator.knative.dev/v1beta1" "KnativeEventing" "knative-eventing" "knative-eventing" .Release.Name) }}
{{- if eq $unmanagedKnativeEventingExists "false" }}
kind: KnativeEventing
apiVersion: operator.knative.dev/v1beta1
metadata:
  name: knative-eventing
  namespace: knative-eventing
spec: {}
---
{{- end }}
{{- $unmanagedKnativeServingExists := include "unmanaged-resource-exists" (list "operator.knative.dev/v1beta1" "KnativeServing" "knative-serving" "knative-serving" .Release.Name) }}
{{- if eq $unmanagedKnativeEventingExists "false" }}
apiVersion: operator.knative.dev/v1beta1
kind: KnativeServing
metadata:
  name: knative-serving
  namespace: knative-serving
spec: {}
{{- end }}
{{- end }}
